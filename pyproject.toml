[project]
name = "nonebot-plugin-all4one"
version = "0.1.0a4"
description = ""
authors = [{ name = "Jigsaw", email = "j1g5aw@foxmail.com" }]
dependencies = [
    "nonebot2<3.0.0,>=2.2.1",
    "nonebot-adapter-onebot>=2.2.2",
    "nonebot-plugin-localstore>=0.7.1",
    "nonebot-plugin-orm[default]>=0.7.5",
    "pydantic>=2.6.4",
]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = { text = "AGPL-3.0-only" }

[project.optional-dependencies]
telegram = ["nonebot-adapter-telegram>=0.1.0b13"]
qq = ["nonebot-adapter-qq>=0.2.2"]
adapters = ["nonebot-adapter-telegram>=0.1.0b13", "nonebot-adapter-qq>=0.2.4"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
pre-commit = ["pycln", "isort", "black", "nonemoji", "pre-commit"]
nonebot = [
    "httpx>=0.23.3,<1.0.0",
    "fastapi>=0.110.0,<1.0.0",
    "uvicorn>=0.12.0,<1.0.0",
    "websockets>=10.4",
]
tests = [
    "nonebug>=0.3.1",
    "pytest-asyncio>=0.20.3",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.2.0",
]
impl = ["nonebot-plugin-sentry>=0.2.2"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "UP037",  # quoted-annotation
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
extra_standard_library = ["typing_extensions"]

[tool.pycln]
path = "."
all = false

[tool.pyright]
typeCheckingMode = "basic"
reportShadowedImports = false
pythonVersion = "3.9"
pythonPlatform = "All"
executionEnvironments = [
    { root = "./tests", extraPaths = [
        "./",
    ] },
    { root = "./" },
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
